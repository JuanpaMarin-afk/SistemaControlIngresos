/* SCRIPT PARA LA CREACIÃ“N DE PROCEDIMIENTOS PARA ATTENDANT */

USE SISTEMA_CONTROL_INGRESOS;

/* PROCEDIMIENTO PARA LISTAR TODOS LOS ATTENDANT */
DELIMITER //

CREATE PROCEDURE SelectAllAttendant()
BEGIN
    SELECT ID_ATTENDANT, NAME, STATUS FROM ATTENDANT;
END;
//

DELIMITER ;

/* PROCEDIMIENTO PARA LISTAR ATTENDANT POR ID */
DELIMITER //

CREATE PROCEDURE SelectByIdAttendant(IN Id INT)
BEGIN
    SELECT ID_ATTENDANT, NAME, STATUS 
    FROM ATTENDANT
    WHERE ID_ATTENDANT = Id;
END;
//

DELIMITER ;

/* PROCEDIMIENTO PARA INSERTAR ATTENDANT */
DELIMITER //

CREATE PROCEDURE InsertAttendant(IN Name VARCHAR(255), IN Status VARCHAR(50))
BEGIN
    INSERT INTO ATTENDANT (NAME, STATUS)
        VALUES (Name, 'Active');
END;
//

DELIMITER ;

/* PROCEDIMIENTO PARA ACTUALIZAR ATTENDANT */
DELIMITER //

CREATE PROCEDURE UpdateAttendant(IN Id INT, IN Name VARCHAR(255), IN Status VARCHAR(50))
BEGIN
    UPDATE ATTENDANT
    SET NAME = Name, STATUS = Status
    WHERE ID_ATTENDANT = Id;
END;
//

DELIMITER ;

/* PROCEDIMIENTO PARA CAMBIAR EL STATUS DE ATTENDANT */
DELIMITER //

CREATE PROCEDURE ToggleAttendantStatus(IN Id INT)
BEGIN
    DECLARE CurrentStatus VARCHAR(50);

    -- Obtener el estado actual
    SELECT STATUS INTO CurrentStatus
    FROM ATTENDANT
    WHERE ID_ATTENDANT = Id;

    -- Cambiar el estado a 'Desactivado' si es 'Activado', y viceversa
    IF CurrentStatus = 'Active' THEN
        UPDATE ATTENDANT
        SET STATUS = 'Disabled'
        WHERE ID_ATTENDANT = Id;
    ELSEIF CurrentStatus = 'Disabled' THEN
        UPDATE ATTENDANT
        SET STATUS = 'Active'
        WHERE ID_ATTENDANT = Id;
    END IF;

END;
//

DELIMITER ;
